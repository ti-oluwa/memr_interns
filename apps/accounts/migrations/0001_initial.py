# Generated by Django 5.1.5 on 2025-01-17 07:34

import apps.accounts.managers
import phonenumber_field.modelfields
import timezone_field.fields
import uuid_extensions.uuid7
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid_extensions.uuid7, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=120)),
                ('last_name', models.CharField(max_length=120)),
                ('other_name', models.CharField(blank=True, max_length=120, null=True)),
                ('account_type', models.CharField(choices=[('intern', 'Intern'), ('staff', 'Staff')], default='intern', max_length=120)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email address')),
                ('phone1', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Phone number 1')),
                ('phone2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone number 2')),
                ('timezone', timezone_field.fields.TimeZoneField(blank=True, default='UTC', null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User account',
                'verbose_name_plural': 'User accounts',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', apps.accounts.managers.UserAccountManager()),
            ],
        ),
    ]
